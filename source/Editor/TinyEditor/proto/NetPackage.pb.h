// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NetPackage.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_NetPackage_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_NetPackage_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_NetPackage_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_NetPackage_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[8]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_NetPackage_2eproto;
namespace Tiny3D {
namespace Editor {
class NetRequestBody;
class NetRequestBodyDefaultTypeInternal;
extern NetRequestBodyDefaultTypeInternal _NetRequestBody_default_instance_;
class NetResponseBody;
class NetResponseBodyDefaultTypeInternal;
extern NetResponseBodyDefaultTypeInternal _NetResponseBody_default_instance_;
class ReqCreateProject;
class ReqCreateProjectDefaultTypeInternal;
extern ReqCreateProjectDefaultTypeInternal _ReqCreateProject_default_instance_;
class ReqHello;
class ReqHelloDefaultTypeInternal;
extern ReqHelloDefaultTypeInternal _ReqHello_default_instance_;
class ReqOpenProject;
class ReqOpenProjectDefaultTypeInternal;
extern ReqOpenProjectDefaultTypeInternal _ReqOpenProject_default_instance_;
class RspCreateProject;
class RspCreateProjectDefaultTypeInternal;
extern RspCreateProjectDefaultTypeInternal _RspCreateProject_default_instance_;
class RspHello;
class RspHelloDefaultTypeInternal;
extern RspHelloDefaultTypeInternal _RspHello_default_instance_;
class RspOpenProject;
class RspOpenProjectDefaultTypeInternal;
extern RspOpenProjectDefaultTypeInternal _RspOpenProject_default_instance_;
}  // namespace Editor
}  // namespace Tiny3D
PROTOBUF_NAMESPACE_OPEN
template<> ::Tiny3D::Editor::NetRequestBody* Arena::CreateMaybeMessage<::Tiny3D::Editor::NetRequestBody>(Arena*);
template<> ::Tiny3D::Editor::NetResponseBody* Arena::CreateMaybeMessage<::Tiny3D::Editor::NetResponseBody>(Arena*);
template<> ::Tiny3D::Editor::ReqCreateProject* Arena::CreateMaybeMessage<::Tiny3D::Editor::ReqCreateProject>(Arena*);
template<> ::Tiny3D::Editor::ReqHello* Arena::CreateMaybeMessage<::Tiny3D::Editor::ReqHello>(Arena*);
template<> ::Tiny3D::Editor::ReqOpenProject* Arena::CreateMaybeMessage<::Tiny3D::Editor::ReqOpenProject>(Arena*);
template<> ::Tiny3D::Editor::RspCreateProject* Arena::CreateMaybeMessage<::Tiny3D::Editor::RspCreateProject>(Arena*);
template<> ::Tiny3D::Editor::RspHello* Arena::CreateMaybeMessage<::Tiny3D::Editor::RspHello>(Arena*);
template<> ::Tiny3D::Editor::RspOpenProject* Arena::CreateMaybeMessage<::Tiny3D::Editor::RspOpenProject>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Tiny3D {
namespace Editor {

enum MessageID : int {
  MSDID_NONE = 0,
  MSGID_HELLO = 10086,
  MSGID_CREATE_PROJECT = 10087,
  MSGID_OPEN_PROJECT = 10088,
  MessageID_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  MessageID_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool MessageID_IsValid(int value);
constexpr MessageID MessageID_MIN = MSDID_NONE;
constexpr MessageID MessageID_MAX = MSGID_OPEN_PROJECT;
constexpr int MessageID_ARRAYSIZE = MessageID_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessageID_descriptor();
template<typename T>
inline const std::string& MessageID_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MessageID>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MessageID_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MessageID_descriptor(), enum_t_value);
}
inline bool MessageID_Parse(
    const std::string& name, MessageID* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MessageID>(
    MessageID_descriptor(), name, value);
}
// ===================================================================

class ReqHello :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tiny3D.Editor.ReqHello) */ {
 public:
  ReqHello();
  virtual ~ReqHello();

  ReqHello(const ReqHello& from);
  ReqHello(ReqHello&& from) noexcept
    : ReqHello() {
    *this = ::std::move(from);
  }

  inline ReqHello& operator=(const ReqHello& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReqHello& operator=(ReqHello&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ReqHello& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqHello* internal_default_instance() {
    return reinterpret_cast<const ReqHello*>(
               &_ReqHello_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ReqHello& a, ReqHello& b) {
    a.Swap(&b);
  }
  inline void Swap(ReqHello* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ReqHello* New() const final {
    return CreateMaybeMessage<ReqHello>(nullptr);
  }

  ReqHello* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ReqHello>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ReqHello& from);
  void MergeFrom(const ReqHello& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqHello* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tiny3D.Editor.ReqHello";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_NetPackage_2eproto);
    return ::descriptor_table_NetPackage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Tiny3D.Editor.ReqHello)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_NetPackage_2eproto;
};
// -------------------------------------------------------------------

class RspHello :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tiny3D.Editor.RspHello) */ {
 public:
  RspHello();
  virtual ~RspHello();

  RspHello(const RspHello& from);
  RspHello(RspHello&& from) noexcept
    : RspHello() {
    *this = ::std::move(from);
  }

  inline RspHello& operator=(const RspHello& from) {
    CopyFrom(from);
    return *this;
  }
  inline RspHello& operator=(RspHello&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RspHello& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RspHello* internal_default_instance() {
    return reinterpret_cast<const RspHello*>(
               &_RspHello_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(RspHello& a, RspHello& b) {
    a.Swap(&b);
  }
  inline void Swap(RspHello* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RspHello* New() const final {
    return CreateMaybeMessage<RspHello>(nullptr);
  }

  RspHello* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RspHello>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RspHello& from);
  void MergeFrom(const RspHello& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RspHello* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tiny3D.Editor.RspHello";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_NetPackage_2eproto);
    return ::descriptor_table_NetPackage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Tiny3D.Editor.RspHello)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_NetPackage_2eproto;
};
// -------------------------------------------------------------------

class ReqCreateProject :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tiny3D.Editor.ReqCreateProject) */ {
 public:
  ReqCreateProject();
  virtual ~ReqCreateProject();

  ReqCreateProject(const ReqCreateProject& from);
  ReqCreateProject(ReqCreateProject&& from) noexcept
    : ReqCreateProject() {
    *this = ::std::move(from);
  }

  inline ReqCreateProject& operator=(const ReqCreateProject& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReqCreateProject& operator=(ReqCreateProject&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ReqCreateProject& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqCreateProject* internal_default_instance() {
    return reinterpret_cast<const ReqCreateProject*>(
               &_ReqCreateProject_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ReqCreateProject& a, ReqCreateProject& b) {
    a.Swap(&b);
  }
  inline void Swap(ReqCreateProject* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ReqCreateProject* New() const final {
    return CreateMaybeMessage<ReqCreateProject>(nullptr);
  }

  ReqCreateProject* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ReqCreateProject>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ReqCreateProject& from);
  void MergeFrom(const ReqCreateProject& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqCreateProject* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tiny3D.Editor.ReqCreateProject";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_NetPackage_2eproto);
    return ::descriptor_table_NetPackage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 2,
    kNameFieldNumber = 3,
    kResultFieldNumber = 1,
  };
  // string path = 2;
  void clear_path();
  const std::string& path() const;
  void set_path(const std::string& value);
  void set_path(std::string&& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  std::string* mutable_path();
  std::string* release_path();
  void set_allocated_path(std::string* path);
  private:
  const std::string& _internal_path() const;
  void _internal_set_path(const std::string& value);
  std::string* _internal_mutable_path();
  public:

  // string name = 3;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // int32 result = 1;
  void clear_result();
  ::PROTOBUF_NAMESPACE_ID::int32 result() const;
  void set_result(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_result() const;
  void _internal_set_result(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Tiny3D.Editor.ReqCreateProject)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr path_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::int32 result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_NetPackage_2eproto;
};
// -------------------------------------------------------------------

class RspCreateProject :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tiny3D.Editor.RspCreateProject) */ {
 public:
  RspCreateProject();
  virtual ~RspCreateProject();

  RspCreateProject(const RspCreateProject& from);
  RspCreateProject(RspCreateProject&& from) noexcept
    : RspCreateProject() {
    *this = ::std::move(from);
  }

  inline RspCreateProject& operator=(const RspCreateProject& from) {
    CopyFrom(from);
    return *this;
  }
  inline RspCreateProject& operator=(RspCreateProject&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RspCreateProject& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RspCreateProject* internal_default_instance() {
    return reinterpret_cast<const RspCreateProject*>(
               &_RspCreateProject_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(RspCreateProject& a, RspCreateProject& b) {
    a.Swap(&b);
  }
  inline void Swap(RspCreateProject* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RspCreateProject* New() const final {
    return CreateMaybeMessage<RspCreateProject>(nullptr);
  }

  RspCreateProject* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RspCreateProject>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RspCreateProject& from);
  void MergeFrom(const RspCreateProject& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RspCreateProject* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tiny3D.Editor.RspCreateProject";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_NetPackage_2eproto);
    return ::descriptor_table_NetPackage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // int32 result = 1;
  void clear_result();
  ::PROTOBUF_NAMESPACE_ID::int32 result() const;
  void set_result(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_result() const;
  void _internal_set_result(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Tiny3D.Editor.RspCreateProject)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_NetPackage_2eproto;
};
// -------------------------------------------------------------------

class ReqOpenProject :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tiny3D.Editor.ReqOpenProject) */ {
 public:
  ReqOpenProject();
  virtual ~ReqOpenProject();

  ReqOpenProject(const ReqOpenProject& from);
  ReqOpenProject(ReqOpenProject&& from) noexcept
    : ReqOpenProject() {
    *this = ::std::move(from);
  }

  inline ReqOpenProject& operator=(const ReqOpenProject& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReqOpenProject& operator=(ReqOpenProject&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ReqOpenProject& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqOpenProject* internal_default_instance() {
    return reinterpret_cast<const ReqOpenProject*>(
               &_ReqOpenProject_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ReqOpenProject& a, ReqOpenProject& b) {
    a.Swap(&b);
  }
  inline void Swap(ReqOpenProject* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ReqOpenProject* New() const final {
    return CreateMaybeMessage<ReqOpenProject>(nullptr);
  }

  ReqOpenProject* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ReqOpenProject>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ReqOpenProject& from);
  void MergeFrom(const ReqOpenProject& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqOpenProject* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tiny3D.Editor.ReqOpenProject";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_NetPackage_2eproto);
    return ::descriptor_table_NetPackage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Tiny3D.Editor.ReqOpenProject)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_NetPackage_2eproto;
};
// -------------------------------------------------------------------

class RspOpenProject :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tiny3D.Editor.RspOpenProject) */ {
 public:
  RspOpenProject();
  virtual ~RspOpenProject();

  RspOpenProject(const RspOpenProject& from);
  RspOpenProject(RspOpenProject&& from) noexcept
    : RspOpenProject() {
    *this = ::std::move(from);
  }

  inline RspOpenProject& operator=(const RspOpenProject& from) {
    CopyFrom(from);
    return *this;
  }
  inline RspOpenProject& operator=(RspOpenProject&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RspOpenProject& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RspOpenProject* internal_default_instance() {
    return reinterpret_cast<const RspOpenProject*>(
               &_RspOpenProject_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(RspOpenProject& a, RspOpenProject& b) {
    a.Swap(&b);
  }
  inline void Swap(RspOpenProject* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RspOpenProject* New() const final {
    return CreateMaybeMessage<RspOpenProject>(nullptr);
  }

  RspOpenProject* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RspOpenProject>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RspOpenProject& from);
  void MergeFrom(const RspOpenProject& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RspOpenProject* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tiny3D.Editor.RspOpenProject";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_NetPackage_2eproto);
    return ::descriptor_table_NetPackage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Tiny3D.Editor.RspOpenProject)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_NetPackage_2eproto;
};
// -------------------------------------------------------------------

class NetRequestBody :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tiny3D.Editor.NetRequestBody) */ {
 public:
  NetRequestBody();
  virtual ~NetRequestBody();

  NetRequestBody(const NetRequestBody& from);
  NetRequestBody(NetRequestBody&& from) noexcept
    : NetRequestBody() {
    *this = ::std::move(from);
  }

  inline NetRequestBody& operator=(const NetRequestBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetRequestBody& operator=(NetRequestBody&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NetRequestBody& default_instance();

  enum DataCase {
    kHello = 2,
    kCreateProject = 3,
    kOpenProject = 4,
    DATA_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NetRequestBody* internal_default_instance() {
    return reinterpret_cast<const NetRequestBody*>(
               &_NetRequestBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(NetRequestBody& a, NetRequestBody& b) {
    a.Swap(&b);
  }
  inline void Swap(NetRequestBody* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NetRequestBody* New() const final {
    return CreateMaybeMessage<NetRequestBody>(nullptr);
  }

  NetRequestBody* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NetRequestBody>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NetRequestBody& from);
  void MergeFrom(const NetRequestBody& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NetRequestBody* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tiny3D.Editor.NetRequestBody";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_NetPackage_2eproto);
    return ::descriptor_table_NetPackage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageIdFieldNumber = 1,
    kHelloFieldNumber = 2,
    kCreateProjectFieldNumber = 3,
    kOpenProjectFieldNumber = 4,
  };
  // int32 message_id = 1;
  void clear_message_id();
  ::PROTOBUF_NAMESPACE_ID::int32 message_id() const;
  void set_message_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_message_id() const;
  void _internal_set_message_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // .Tiny3D.Editor.ReqHello hello = 2;
  bool has_hello() const;
  private:
  bool _internal_has_hello() const;
  public:
  void clear_hello();
  const ::Tiny3D::Editor::ReqHello& hello() const;
  ::Tiny3D::Editor::ReqHello* release_hello();
  ::Tiny3D::Editor::ReqHello* mutable_hello();
  void set_allocated_hello(::Tiny3D::Editor::ReqHello* hello);
  private:
  const ::Tiny3D::Editor::ReqHello& _internal_hello() const;
  ::Tiny3D::Editor::ReqHello* _internal_mutable_hello();
  public:

  // .Tiny3D.Editor.ReqCreateProject create_project = 3;
  bool has_create_project() const;
  private:
  bool _internal_has_create_project() const;
  public:
  void clear_create_project();
  const ::Tiny3D::Editor::ReqCreateProject& create_project() const;
  ::Tiny3D::Editor::ReqCreateProject* release_create_project();
  ::Tiny3D::Editor::ReqCreateProject* mutable_create_project();
  void set_allocated_create_project(::Tiny3D::Editor::ReqCreateProject* create_project);
  private:
  const ::Tiny3D::Editor::ReqCreateProject& _internal_create_project() const;
  ::Tiny3D::Editor::ReqCreateProject* _internal_mutable_create_project();
  public:

  // .Tiny3D.Editor.ReqOpenProject open_project = 4;
  bool has_open_project() const;
  private:
  bool _internal_has_open_project() const;
  public:
  void clear_open_project();
  const ::Tiny3D::Editor::ReqOpenProject& open_project() const;
  ::Tiny3D::Editor::ReqOpenProject* release_open_project();
  ::Tiny3D::Editor::ReqOpenProject* mutable_open_project();
  void set_allocated_open_project(::Tiny3D::Editor::ReqOpenProject* open_project);
  private:
  const ::Tiny3D::Editor::ReqOpenProject& _internal_open_project() const;
  ::Tiny3D::Editor::ReqOpenProject* _internal_mutable_open_project();
  public:

  void clear_data();
  DataCase data_case() const;
  // @@protoc_insertion_point(class_scope:Tiny3D.Editor.NetRequestBody)
 private:
  class _Internal;
  void set_has_hello();
  void set_has_create_project();
  void set_has_open_project();

  inline bool has_data() const;
  inline void clear_has_data();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 message_id_;
  union DataUnion {
    DataUnion() {}
    ::Tiny3D::Editor::ReqHello* hello_;
    ::Tiny3D::Editor::ReqCreateProject* create_project_;
    ::Tiny3D::Editor::ReqOpenProject* open_project_;
  } data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_NetPackage_2eproto;
};
// -------------------------------------------------------------------

class NetResponseBody :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tiny3D.Editor.NetResponseBody) */ {
 public:
  NetResponseBody();
  virtual ~NetResponseBody();

  NetResponseBody(const NetResponseBody& from);
  NetResponseBody(NetResponseBody&& from) noexcept
    : NetResponseBody() {
    *this = ::std::move(from);
  }

  inline NetResponseBody& operator=(const NetResponseBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetResponseBody& operator=(NetResponseBody&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NetResponseBody& default_instance();

  enum DataCase {
    kHello = 3,
    kCreateProject = 4,
    kOpenProject = 5,
    DATA_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NetResponseBody* internal_default_instance() {
    return reinterpret_cast<const NetResponseBody*>(
               &_NetResponseBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(NetResponseBody& a, NetResponseBody& b) {
    a.Swap(&b);
  }
  inline void Swap(NetResponseBody* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NetResponseBody* New() const final {
    return CreateMaybeMessage<NetResponseBody>(nullptr);
  }

  NetResponseBody* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NetResponseBody>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NetResponseBody& from);
  void MergeFrom(const NetResponseBody& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NetResponseBody* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tiny3D.Editor.NetResponseBody";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_NetPackage_2eproto);
    return ::descriptor_table_NetPackage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSeqIdFieldNumber = 1,
    kMessageIdFieldNumber = 2,
    kHelloFieldNumber = 3,
    kCreateProjectFieldNumber = 4,
    kOpenProjectFieldNumber = 5,
  };
  // int32 seq_id = 1;
  void clear_seq_id();
  ::PROTOBUF_NAMESPACE_ID::int32 seq_id() const;
  void set_seq_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_seq_id() const;
  void _internal_set_seq_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 message_id = 2;
  void clear_message_id();
  ::PROTOBUF_NAMESPACE_ID::int32 message_id() const;
  void set_message_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_message_id() const;
  void _internal_set_message_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // .Tiny3D.Editor.RspHello hello = 3;
  bool has_hello() const;
  private:
  bool _internal_has_hello() const;
  public:
  void clear_hello();
  const ::Tiny3D::Editor::RspHello& hello() const;
  ::Tiny3D::Editor::RspHello* release_hello();
  ::Tiny3D::Editor::RspHello* mutable_hello();
  void set_allocated_hello(::Tiny3D::Editor::RspHello* hello);
  private:
  const ::Tiny3D::Editor::RspHello& _internal_hello() const;
  ::Tiny3D::Editor::RspHello* _internal_mutable_hello();
  public:

  // .Tiny3D.Editor.RspCreateProject create_project = 4;
  bool has_create_project() const;
  private:
  bool _internal_has_create_project() const;
  public:
  void clear_create_project();
  const ::Tiny3D::Editor::RspCreateProject& create_project() const;
  ::Tiny3D::Editor::RspCreateProject* release_create_project();
  ::Tiny3D::Editor::RspCreateProject* mutable_create_project();
  void set_allocated_create_project(::Tiny3D::Editor::RspCreateProject* create_project);
  private:
  const ::Tiny3D::Editor::RspCreateProject& _internal_create_project() const;
  ::Tiny3D::Editor::RspCreateProject* _internal_mutable_create_project();
  public:

  // .Tiny3D.Editor.RspOpenProject open_project = 5;
  bool has_open_project() const;
  private:
  bool _internal_has_open_project() const;
  public:
  void clear_open_project();
  const ::Tiny3D::Editor::RspOpenProject& open_project() const;
  ::Tiny3D::Editor::RspOpenProject* release_open_project();
  ::Tiny3D::Editor::RspOpenProject* mutable_open_project();
  void set_allocated_open_project(::Tiny3D::Editor::RspOpenProject* open_project);
  private:
  const ::Tiny3D::Editor::RspOpenProject& _internal_open_project() const;
  ::Tiny3D::Editor::RspOpenProject* _internal_mutable_open_project();
  public:

  void clear_data();
  DataCase data_case() const;
  // @@protoc_insertion_point(class_scope:Tiny3D.Editor.NetResponseBody)
 private:
  class _Internal;
  void set_has_hello();
  void set_has_create_project();
  void set_has_open_project();

  inline bool has_data() const;
  inline void clear_has_data();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 seq_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 message_id_;
  union DataUnion {
    DataUnion() {}
    ::Tiny3D::Editor::RspHello* hello_;
    ::Tiny3D::Editor::RspCreateProject* create_project_;
    ::Tiny3D::Editor::RspOpenProject* open_project_;
  } data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_NetPackage_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ReqHello

// -------------------------------------------------------------------

// RspHello

// -------------------------------------------------------------------

// ReqCreateProject

// int32 result = 1;
inline void ReqCreateProject::clear_result() {
  result_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ReqCreateProject::_internal_result() const {
  return result_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ReqCreateProject::result() const {
  // @@protoc_insertion_point(field_get:Tiny3D.Editor.ReqCreateProject.result)
  return _internal_result();
}
inline void ReqCreateProject::_internal_set_result(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  result_ = value;
}
inline void ReqCreateProject::set_result(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:Tiny3D.Editor.ReqCreateProject.result)
}

// string path = 2;
inline void ReqCreateProject::clear_path() {
  path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ReqCreateProject::path() const {
  // @@protoc_insertion_point(field_get:Tiny3D.Editor.ReqCreateProject.path)
  return _internal_path();
}
inline void ReqCreateProject::set_path(const std::string& value) {
  _internal_set_path(value);
  // @@protoc_insertion_point(field_set:Tiny3D.Editor.ReqCreateProject.path)
}
inline std::string* ReqCreateProject::mutable_path() {
  // @@protoc_insertion_point(field_mutable:Tiny3D.Editor.ReqCreateProject.path)
  return _internal_mutable_path();
}
inline const std::string& ReqCreateProject::_internal_path() const {
  return path_.GetNoArena();
}
inline void ReqCreateProject::_internal_set_path(const std::string& value) {
  
  path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ReqCreateProject::set_path(std::string&& value) {
  
  path_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Tiny3D.Editor.ReqCreateProject.path)
}
inline void ReqCreateProject::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Tiny3D.Editor.ReqCreateProject.path)
}
inline void ReqCreateProject::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Tiny3D.Editor.ReqCreateProject.path)
}
inline std::string* ReqCreateProject::_internal_mutable_path() {
  
  return path_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ReqCreateProject::release_path() {
  // @@protoc_insertion_point(field_release:Tiny3D.Editor.ReqCreateProject.path)
  
  return path_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ReqCreateProject::set_allocated_path(std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:Tiny3D.Editor.ReqCreateProject.path)
}

// string name = 3;
inline void ReqCreateProject::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ReqCreateProject::name() const {
  // @@protoc_insertion_point(field_get:Tiny3D.Editor.ReqCreateProject.name)
  return _internal_name();
}
inline void ReqCreateProject::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:Tiny3D.Editor.ReqCreateProject.name)
}
inline std::string* ReqCreateProject::mutable_name() {
  // @@protoc_insertion_point(field_mutable:Tiny3D.Editor.ReqCreateProject.name)
  return _internal_mutable_name();
}
inline const std::string& ReqCreateProject::_internal_name() const {
  return name_.GetNoArena();
}
inline void ReqCreateProject::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ReqCreateProject::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Tiny3D.Editor.ReqCreateProject.name)
}
inline void ReqCreateProject::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Tiny3D.Editor.ReqCreateProject.name)
}
inline void ReqCreateProject::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Tiny3D.Editor.ReqCreateProject.name)
}
inline std::string* ReqCreateProject::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ReqCreateProject::release_name() {
  // @@protoc_insertion_point(field_release:Tiny3D.Editor.ReqCreateProject.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ReqCreateProject::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Tiny3D.Editor.ReqCreateProject.name)
}

// -------------------------------------------------------------------

// RspCreateProject

// int32 result = 1;
inline void RspCreateProject::clear_result() {
  result_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RspCreateProject::_internal_result() const {
  return result_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RspCreateProject::result() const {
  // @@protoc_insertion_point(field_get:Tiny3D.Editor.RspCreateProject.result)
  return _internal_result();
}
inline void RspCreateProject::_internal_set_result(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  result_ = value;
}
inline void RspCreateProject::set_result(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:Tiny3D.Editor.RspCreateProject.result)
}

// -------------------------------------------------------------------

// ReqOpenProject

// -------------------------------------------------------------------

// RspOpenProject

// -------------------------------------------------------------------

// NetRequestBody

// int32 message_id = 1;
inline void NetRequestBody::clear_message_id() {
  message_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NetRequestBody::_internal_message_id() const {
  return message_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NetRequestBody::message_id() const {
  // @@protoc_insertion_point(field_get:Tiny3D.Editor.NetRequestBody.message_id)
  return _internal_message_id();
}
inline void NetRequestBody::_internal_set_message_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  message_id_ = value;
}
inline void NetRequestBody::set_message_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_message_id(value);
  // @@protoc_insertion_point(field_set:Tiny3D.Editor.NetRequestBody.message_id)
}

// .Tiny3D.Editor.ReqHello hello = 2;
inline bool NetRequestBody::_internal_has_hello() const {
  return data_case() == kHello;
}
inline bool NetRequestBody::has_hello() const {
  return _internal_has_hello();
}
inline void NetRequestBody::set_has_hello() {
  _oneof_case_[0] = kHello;
}
inline void NetRequestBody::clear_hello() {
  if (_internal_has_hello()) {
    delete data_.hello_;
    clear_has_data();
  }
}
inline ::Tiny3D::Editor::ReqHello* NetRequestBody::release_hello() {
  // @@protoc_insertion_point(field_release:Tiny3D.Editor.NetRequestBody.hello)
  if (_internal_has_hello()) {
    clear_has_data();
      ::Tiny3D::Editor::ReqHello* temp = data_.hello_;
    data_.hello_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Tiny3D::Editor::ReqHello& NetRequestBody::_internal_hello() const {
  return _internal_has_hello()
      ? *data_.hello_
      : *reinterpret_cast< ::Tiny3D::Editor::ReqHello*>(&::Tiny3D::Editor::_ReqHello_default_instance_);
}
inline const ::Tiny3D::Editor::ReqHello& NetRequestBody::hello() const {
  // @@protoc_insertion_point(field_get:Tiny3D.Editor.NetRequestBody.hello)
  return _internal_hello();
}
inline ::Tiny3D::Editor::ReqHello* NetRequestBody::_internal_mutable_hello() {
  if (!_internal_has_hello()) {
    clear_data();
    set_has_hello();
    data_.hello_ = CreateMaybeMessage< ::Tiny3D::Editor::ReqHello >(
        GetArenaNoVirtual());
  }
  return data_.hello_;
}
inline ::Tiny3D::Editor::ReqHello* NetRequestBody::mutable_hello() {
  // @@protoc_insertion_point(field_mutable:Tiny3D.Editor.NetRequestBody.hello)
  return _internal_mutable_hello();
}

// .Tiny3D.Editor.ReqCreateProject create_project = 3;
inline bool NetRequestBody::_internal_has_create_project() const {
  return data_case() == kCreateProject;
}
inline bool NetRequestBody::has_create_project() const {
  return _internal_has_create_project();
}
inline void NetRequestBody::set_has_create_project() {
  _oneof_case_[0] = kCreateProject;
}
inline void NetRequestBody::clear_create_project() {
  if (_internal_has_create_project()) {
    delete data_.create_project_;
    clear_has_data();
  }
}
inline ::Tiny3D::Editor::ReqCreateProject* NetRequestBody::release_create_project() {
  // @@protoc_insertion_point(field_release:Tiny3D.Editor.NetRequestBody.create_project)
  if (_internal_has_create_project()) {
    clear_has_data();
      ::Tiny3D::Editor::ReqCreateProject* temp = data_.create_project_;
    data_.create_project_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Tiny3D::Editor::ReqCreateProject& NetRequestBody::_internal_create_project() const {
  return _internal_has_create_project()
      ? *data_.create_project_
      : *reinterpret_cast< ::Tiny3D::Editor::ReqCreateProject*>(&::Tiny3D::Editor::_ReqCreateProject_default_instance_);
}
inline const ::Tiny3D::Editor::ReqCreateProject& NetRequestBody::create_project() const {
  // @@protoc_insertion_point(field_get:Tiny3D.Editor.NetRequestBody.create_project)
  return _internal_create_project();
}
inline ::Tiny3D::Editor::ReqCreateProject* NetRequestBody::_internal_mutable_create_project() {
  if (!_internal_has_create_project()) {
    clear_data();
    set_has_create_project();
    data_.create_project_ = CreateMaybeMessage< ::Tiny3D::Editor::ReqCreateProject >(
        GetArenaNoVirtual());
  }
  return data_.create_project_;
}
inline ::Tiny3D::Editor::ReqCreateProject* NetRequestBody::mutable_create_project() {
  // @@protoc_insertion_point(field_mutable:Tiny3D.Editor.NetRequestBody.create_project)
  return _internal_mutable_create_project();
}

// .Tiny3D.Editor.ReqOpenProject open_project = 4;
inline bool NetRequestBody::_internal_has_open_project() const {
  return data_case() == kOpenProject;
}
inline bool NetRequestBody::has_open_project() const {
  return _internal_has_open_project();
}
inline void NetRequestBody::set_has_open_project() {
  _oneof_case_[0] = kOpenProject;
}
inline void NetRequestBody::clear_open_project() {
  if (_internal_has_open_project()) {
    delete data_.open_project_;
    clear_has_data();
  }
}
inline ::Tiny3D::Editor::ReqOpenProject* NetRequestBody::release_open_project() {
  // @@protoc_insertion_point(field_release:Tiny3D.Editor.NetRequestBody.open_project)
  if (_internal_has_open_project()) {
    clear_has_data();
      ::Tiny3D::Editor::ReqOpenProject* temp = data_.open_project_;
    data_.open_project_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Tiny3D::Editor::ReqOpenProject& NetRequestBody::_internal_open_project() const {
  return _internal_has_open_project()
      ? *data_.open_project_
      : *reinterpret_cast< ::Tiny3D::Editor::ReqOpenProject*>(&::Tiny3D::Editor::_ReqOpenProject_default_instance_);
}
inline const ::Tiny3D::Editor::ReqOpenProject& NetRequestBody::open_project() const {
  // @@protoc_insertion_point(field_get:Tiny3D.Editor.NetRequestBody.open_project)
  return _internal_open_project();
}
inline ::Tiny3D::Editor::ReqOpenProject* NetRequestBody::_internal_mutable_open_project() {
  if (!_internal_has_open_project()) {
    clear_data();
    set_has_open_project();
    data_.open_project_ = CreateMaybeMessage< ::Tiny3D::Editor::ReqOpenProject >(
        GetArenaNoVirtual());
  }
  return data_.open_project_;
}
inline ::Tiny3D::Editor::ReqOpenProject* NetRequestBody::mutable_open_project() {
  // @@protoc_insertion_point(field_mutable:Tiny3D.Editor.NetRequestBody.open_project)
  return _internal_mutable_open_project();
}

inline bool NetRequestBody::has_data() const {
  return data_case() != DATA_NOT_SET;
}
inline void NetRequestBody::clear_has_data() {
  _oneof_case_[0] = DATA_NOT_SET;
}
inline NetRequestBody::DataCase NetRequestBody::data_case() const {
  return NetRequestBody::DataCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// NetResponseBody

// int32 seq_id = 1;
inline void NetResponseBody::clear_seq_id() {
  seq_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NetResponseBody::_internal_seq_id() const {
  return seq_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NetResponseBody::seq_id() const {
  // @@protoc_insertion_point(field_get:Tiny3D.Editor.NetResponseBody.seq_id)
  return _internal_seq_id();
}
inline void NetResponseBody::_internal_set_seq_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  seq_id_ = value;
}
inline void NetResponseBody::set_seq_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_seq_id(value);
  // @@protoc_insertion_point(field_set:Tiny3D.Editor.NetResponseBody.seq_id)
}

// int32 message_id = 2;
inline void NetResponseBody::clear_message_id() {
  message_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NetResponseBody::_internal_message_id() const {
  return message_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NetResponseBody::message_id() const {
  // @@protoc_insertion_point(field_get:Tiny3D.Editor.NetResponseBody.message_id)
  return _internal_message_id();
}
inline void NetResponseBody::_internal_set_message_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  message_id_ = value;
}
inline void NetResponseBody::set_message_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_message_id(value);
  // @@protoc_insertion_point(field_set:Tiny3D.Editor.NetResponseBody.message_id)
}

// .Tiny3D.Editor.RspHello hello = 3;
inline bool NetResponseBody::_internal_has_hello() const {
  return data_case() == kHello;
}
inline bool NetResponseBody::has_hello() const {
  return _internal_has_hello();
}
inline void NetResponseBody::set_has_hello() {
  _oneof_case_[0] = kHello;
}
inline void NetResponseBody::clear_hello() {
  if (_internal_has_hello()) {
    delete data_.hello_;
    clear_has_data();
  }
}
inline ::Tiny3D::Editor::RspHello* NetResponseBody::release_hello() {
  // @@protoc_insertion_point(field_release:Tiny3D.Editor.NetResponseBody.hello)
  if (_internal_has_hello()) {
    clear_has_data();
      ::Tiny3D::Editor::RspHello* temp = data_.hello_;
    data_.hello_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Tiny3D::Editor::RspHello& NetResponseBody::_internal_hello() const {
  return _internal_has_hello()
      ? *data_.hello_
      : *reinterpret_cast< ::Tiny3D::Editor::RspHello*>(&::Tiny3D::Editor::_RspHello_default_instance_);
}
inline const ::Tiny3D::Editor::RspHello& NetResponseBody::hello() const {
  // @@protoc_insertion_point(field_get:Tiny3D.Editor.NetResponseBody.hello)
  return _internal_hello();
}
inline ::Tiny3D::Editor::RspHello* NetResponseBody::_internal_mutable_hello() {
  if (!_internal_has_hello()) {
    clear_data();
    set_has_hello();
    data_.hello_ = CreateMaybeMessage< ::Tiny3D::Editor::RspHello >(
        GetArenaNoVirtual());
  }
  return data_.hello_;
}
inline ::Tiny3D::Editor::RspHello* NetResponseBody::mutable_hello() {
  // @@protoc_insertion_point(field_mutable:Tiny3D.Editor.NetResponseBody.hello)
  return _internal_mutable_hello();
}

// .Tiny3D.Editor.RspCreateProject create_project = 4;
inline bool NetResponseBody::_internal_has_create_project() const {
  return data_case() == kCreateProject;
}
inline bool NetResponseBody::has_create_project() const {
  return _internal_has_create_project();
}
inline void NetResponseBody::set_has_create_project() {
  _oneof_case_[0] = kCreateProject;
}
inline void NetResponseBody::clear_create_project() {
  if (_internal_has_create_project()) {
    delete data_.create_project_;
    clear_has_data();
  }
}
inline ::Tiny3D::Editor::RspCreateProject* NetResponseBody::release_create_project() {
  // @@protoc_insertion_point(field_release:Tiny3D.Editor.NetResponseBody.create_project)
  if (_internal_has_create_project()) {
    clear_has_data();
      ::Tiny3D::Editor::RspCreateProject* temp = data_.create_project_;
    data_.create_project_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Tiny3D::Editor::RspCreateProject& NetResponseBody::_internal_create_project() const {
  return _internal_has_create_project()
      ? *data_.create_project_
      : *reinterpret_cast< ::Tiny3D::Editor::RspCreateProject*>(&::Tiny3D::Editor::_RspCreateProject_default_instance_);
}
inline const ::Tiny3D::Editor::RspCreateProject& NetResponseBody::create_project() const {
  // @@protoc_insertion_point(field_get:Tiny3D.Editor.NetResponseBody.create_project)
  return _internal_create_project();
}
inline ::Tiny3D::Editor::RspCreateProject* NetResponseBody::_internal_mutable_create_project() {
  if (!_internal_has_create_project()) {
    clear_data();
    set_has_create_project();
    data_.create_project_ = CreateMaybeMessage< ::Tiny3D::Editor::RspCreateProject >(
        GetArenaNoVirtual());
  }
  return data_.create_project_;
}
inline ::Tiny3D::Editor::RspCreateProject* NetResponseBody::mutable_create_project() {
  // @@protoc_insertion_point(field_mutable:Tiny3D.Editor.NetResponseBody.create_project)
  return _internal_mutable_create_project();
}

// .Tiny3D.Editor.RspOpenProject open_project = 5;
inline bool NetResponseBody::_internal_has_open_project() const {
  return data_case() == kOpenProject;
}
inline bool NetResponseBody::has_open_project() const {
  return _internal_has_open_project();
}
inline void NetResponseBody::set_has_open_project() {
  _oneof_case_[0] = kOpenProject;
}
inline void NetResponseBody::clear_open_project() {
  if (_internal_has_open_project()) {
    delete data_.open_project_;
    clear_has_data();
  }
}
inline ::Tiny3D::Editor::RspOpenProject* NetResponseBody::release_open_project() {
  // @@protoc_insertion_point(field_release:Tiny3D.Editor.NetResponseBody.open_project)
  if (_internal_has_open_project()) {
    clear_has_data();
      ::Tiny3D::Editor::RspOpenProject* temp = data_.open_project_;
    data_.open_project_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Tiny3D::Editor::RspOpenProject& NetResponseBody::_internal_open_project() const {
  return _internal_has_open_project()
      ? *data_.open_project_
      : *reinterpret_cast< ::Tiny3D::Editor::RspOpenProject*>(&::Tiny3D::Editor::_RspOpenProject_default_instance_);
}
inline const ::Tiny3D::Editor::RspOpenProject& NetResponseBody::open_project() const {
  // @@protoc_insertion_point(field_get:Tiny3D.Editor.NetResponseBody.open_project)
  return _internal_open_project();
}
inline ::Tiny3D::Editor::RspOpenProject* NetResponseBody::_internal_mutable_open_project() {
  if (!_internal_has_open_project()) {
    clear_data();
    set_has_open_project();
    data_.open_project_ = CreateMaybeMessage< ::Tiny3D::Editor::RspOpenProject >(
        GetArenaNoVirtual());
  }
  return data_.open_project_;
}
inline ::Tiny3D::Editor::RspOpenProject* NetResponseBody::mutable_open_project() {
  // @@protoc_insertion_point(field_mutable:Tiny3D.Editor.NetResponseBody.open_project)
  return _internal_mutable_open_project();
}

inline bool NetResponseBody::has_data() const {
  return data_case() != DATA_NOT_SET;
}
inline void NetResponseBody::clear_has_data() {
  _oneof_case_[0] = DATA_NOT_SET;
}
inline NetResponseBody::DataCase NetResponseBody::data_case() const {
  return NetResponseBody::DataCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Editor
}  // namespace Tiny3D

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::Tiny3D::Editor::MessageID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Tiny3D::Editor::MessageID>() {
  return ::Tiny3D::Editor::MessageID_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_NetPackage_2eproto
